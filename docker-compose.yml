version: '3.8'

services:
  # Main API service
  medical-vit-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: medical-vit-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - MODEL_PATH=/app/models/best_model.pth
      - CONFIG_PATH=/app/configs/config.yaml
    volumes:
      - ./models:/app/models:ro
      - ./configs:/app/configs:ro
      - ./logs:/app/logs
      - ./results:/app/results
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - medical-vit-network

  # Development API service
  medical-vit-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: medical-vit-dev
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app
      - MODEL_PATH=/app/models/best_model.pth
      - CONFIG_PATH=/app/configs/config.yaml
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - medical-vit-network
    profiles:
      - dev

  # Jupyter service for development
  medical-vit-jupyter:
    build:
      context: .
      dockerfile: Dockerfile
      target: jupyter
    container_name: medical-vit-jupyter
    ports:
      - "8888:8888"
    environment:
      - PYTHONPATH=/app
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - medical-vit-network
    profiles:
      - dev

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: medical-vit-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - medical-vit-network
    profiles:
      - cache

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: medical-vit-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - medical-vit-api
    restart: unless-stopped
    networks:
      - medical-vit-network
    profiles:
      - proxy

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: medical-vit-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - medical-vit-network
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: medical-vit-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    networks:
      - medical-vit-network
    profiles:
      - monitoring

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  medical-vit-network:
    driver: bridge
